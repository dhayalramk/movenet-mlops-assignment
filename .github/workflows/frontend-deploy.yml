name: Frontend CI/CD (S3 + CloudFront)

on:
  push:
    branches: [main, frontend]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend-deploy.yml"

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    env:
      AWS_REGION: ap-south-1
      ENV: prod
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      FRONTEND_BUCKET_NAME: ${{ secrets.AWS_ACCOUNT_ID }}-prod-movenet-frontend
      STACK_NAME: frontend-static-site

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🧾 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🐛 Debug – List frontend folder contents
        run: |
          echo "Listing ./frontend/"
          ls -alh ./frontend

      - name: 🔍 Get CloudFront Distribution ID from Stack Output
        id: cf
        run: |
          DIST_URL=$(aws cloudformation describe-stacks \
            --region $AWS_REGION \
            --stack-name $STACK_NAME \
            --query "Stacks[0].Outputs[?OutputKey=='CloudFrontURL'].OutputValue" \
            --output text)
          
          if [ -z "$DIST_URL" ]; then
            echo "❌ CloudFront URL not found in stack output"
            exit 1
          fi

          DIST_ID=$(echo "$DIST_URL" | cut -d'.' -f1)
          echo "DISTRIBUTION_ID=$DIST_ID" >> $GITHUB_ENV
          echo "✅ CloudFront Distribution ID: $DIST_ID"

      - name: 📤 Sync Frontend to S3
        run: |
          echo "🚀 Syncing frontend to bucket: $FRONTEND_BUCKET_NAME"
          aws s3 sync ./frontend s3://$FRONTEND_BUCKET_NAME \
            --region $AWS_REGION \
            --delete \
            --only-show-errors \
            --acl public-read \
            --cache-control "max-age=0, no-cache, no-store, must-revalidate"

      - name: 🚀 Invalidate CloudFront Cache
        run: |
          echo "⚡ Invalidating CloudFront cache on: $DISTRIBUTION_ID"
          aws cloudfront create-invalidation \
            --distribution-id $DISTRIBUTION_ID \
            --paths "/*"
