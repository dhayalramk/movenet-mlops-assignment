name: Weekly Model Sync from Kaggle

on:
  schedule:
    - cron: '30 1 * * 1' # Every Monday 07:00 IST (01:30 UTC)
  workflow_dispatch:

jobs:
  sync-model:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    env:
      AWS_REGION: ap-south-1
      ENV: prod
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      MODEL_BUCKET: ${{ secrets.AWS_ACCOUNT_ID }}-prod-movenet-models

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧾 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🐍 Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 📦 Install dependencies
        run: |
          pip install boto3 kaggle python-dotenv

      - name: 🔄 Sync latest model from Kaggle to S3
        run: |
          python scripts/upload_versioned_model.py \
            --bucket $MODEL_BUCKET \
            --region $AWS_REGION \
            --env $ENV

      - name: 🔍 Fetch CloudFront Distribution ID from Stack
        id: cf
        run: |
          STACK_NAME=frontend-static-site
          DIST_ID=$(aws cloudformation describe-stacks \
            --region $AWS_REGION \
            --stack-name $STACK_NAME \
            --query "Stacks[0].Outputs[?OutputKey=='CloudFrontDistributionId'].OutputValue" \
            --output text)
          if [ -z "$DIST_ID" ]; then
            echo "❌ CloudFront Distribution ID not found"
            exit 1
          fi
          echo "CLOUDFRONT_DIST_ID=$DIST_ID" >> $GITHUB_ENV
          echo "✅ CloudFront Distribution ID: $DIST_ID"

      - name: 🚀 Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CLOUDFRONT_DIST_ID \
            --paths "/models/*"
