name: Backend CI/CD (App Runner via ECR)

on:
  push:
    branches: [main, backend]
    paths:
      - "backend/**"
      - ".github/workflows/backend-deploy.yml"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    env:
      AWS_REGION: ap-south-1
      BACKEND_IMAGE_NAME: movenet-backend
      ENV: prod
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      APP_RUNNER_SERVICE_NAME: movenet-backend-service

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🧾 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔐 Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: 🐳 Build and Push Docker Image
        run: |
          IMAGE_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.BACKEND_IMAGE_NAME }}:${GITHUB_SHA}
          docker build -t $IMAGE_URI ./backend
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: 🚀 Deploy to App Runner
        run: |
          aws apprunner update-service \
            --service-name ${{ env.APP_RUNNER_SERVICE_NAME }} \
            --region ${{ env.AWS_REGION }} \
            --source-configuration '{
              "ImageRepository": {
                "ImageIdentifier": "'"$IMAGE_URI"'",
                "ImageRepositoryType": "ECR",
                "ImageConfiguration": {
                  "Port": "8080",
                  "RuntimeEnvironmentVariables": {
                    "ENV": "'"${{ env.ENV }}"'",
                    "AWS_REGION": "'"${{ env.AWS_REGION }}"'",
                    "AWS_ACCOUNT_ID": "'"${{ env.AWS_ACCOUNT_ID }}"'"
                  }
                }
              },
              "AutoDeploymentsEnabled": true
            }'
